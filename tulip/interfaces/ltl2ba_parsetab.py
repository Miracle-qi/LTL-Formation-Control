
# ltl2ba_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightBIMPrightIMPleftXORleftORleftANDrightNOTnonassocEQUALSNEQUALSLTLEGTGEnonassocTIMESDIVnonassocPLUSMINUSnonassocTRUEFALSETRUE FALSE NUMBER NOT AND OR XOR IMP BIMP EQUALS NEQUALS LT LE GT GE PLUS MINUS TIMES DIV LPAREN RPAREN LBRACE RBRACE COLON COLON2 SEMI COMMENT NAME GOTO IF FI NEVER SKIPclaim : NEVER LBRACE COMMENT clauses RBRACEclauses : clauses clauseclauses : clauseclause : if_clauseclause : state COLON if_clauseif_clause : IF cases FI SEMIcases : cases casecases : casecase : COLON2 expr IMP gotoexpr : LPAREN expr RPARENexpr : expr AND exprexpr : expr OR exprexpr : NOT exprexpr : NUMBERexpr : NAMEgoto : GOTO statestate : NAMEempty :'
    
_lr_action_items = {'NEVER':([0,],[2,]),'$end':([1,11,],[0,-1,]),'LBRACE':([2,],[3,]),'COMMENT':([3,],[4,]),'IF':([4,5,6,7,12,13,17,25,],[9,9,-3,-4,-2,9,-5,-6,]),'NAME':([4,5,6,7,12,16,17,21,22,25,27,28,32,],[10,10,-3,-4,-2,24,-5,24,24,-6,24,24,10,]),'RBRACE':([5,6,7,12,17,25,],[11,-3,-4,-2,-5,-6,]),'COLON':([8,10,],[13,-17,]),'COLON2':([9,10,14,15,19,31,36,],[16,-17,16,-8,-7,-9,-16,]),'FI':([10,14,15,19,31,36,],[-17,18,-8,-7,-9,-16,]),'LPAREN':([16,21,22,27,28,],[21,21,21,21,21,]),'NOT':([16,21,22,27,28,],[22,22,22,22,22,]),'NUMBER':([16,21,22,27,28,],[23,23,23,23,23,]),'SEMI':([18,],[25,]),'IMP':([20,23,24,30,33,34,35,],[26,-14,-15,-13,-11,-12,-10,]),'AND':([20,23,24,29,30,33,34,35,],[27,-14,-15,27,-13,-11,27,-10,]),'OR':([20,23,24,29,30,33,34,35,],[28,-14,-15,28,-13,-11,-12,-10,]),'RPAREN':([23,24,29,30,33,34,35,],[-14,-15,35,-13,-11,-12,-10,]),'GOTO':([26,],[32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'claim':([0,],[1,]),'clauses':([4,],[5,]),'clause':([4,5,],[6,12,]),'if_clause':([4,5,13,],[7,7,17,]),'state':([4,5,32,],[8,8,36,]),'cases':([9,],[14,]),'case':([9,14,],[15,19,]),'expr':([16,21,22,27,28,],[20,29,30,33,34,]),'goto':([26,],[31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> claim","S'",1,None,None,None),
  ('claim -> NEVER LBRACE COMMENT clauses RBRACE','claim',5,'p_claim','ltl2ba.py',163),
  ('clauses -> clauses clause','clauses',2,'p_clauses','ltl2ba.py',167),
  ('clauses -> clause','clauses',1,'p_clauses_end','ltl2ba.py',171),
  ('clause -> if_clause','clause',1,'p_clause','ltl2ba.py',175),
  ('clause -> state COLON if_clause','clause',3,'p_clause_labeled','ltl2ba.py',179),
  ('if_clause -> IF cases FI SEMI','if_clause',4,'p_if_clause','ltl2ba.py',187),
  ('cases -> cases case','cases',2,'p_cases','ltl2ba.py',191),
  ('cases -> case','cases',1,'p_cases_end','ltl2ba.py',195),
  ('case -> COLON2 expr IMP goto','case',4,'p_case','ltl2ba.py',199),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_paren','ltl2ba.py',203),
  ('expr -> expr AND expr','expr',3,'p_and','ltl2ba.py',207),
  ('expr -> expr OR expr','expr',3,'p_or','ltl2ba.py',211),
  ('expr -> NOT expr','expr',2,'p_not','ltl2ba.py',215),
  ('expr -> NUMBER','expr',1,'p_number','ltl2ba.py',219),
  ('expr -> NAME','expr',1,'p_expr_name','ltl2ba.py',223),
  ('goto -> GOTO state','goto',2,'p_goto','ltl2ba.py',228),
  ('state -> NAME','state',1,'p_state','ltl2ba.py',232),
  ('empty -> <empty>','empty',0,'p_empty','ltl2ba.py',242),
]
